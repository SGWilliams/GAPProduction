Python Library Documentation: module gapage.zipping in gapage

NAME
    gapage.zipping

FILE
    t:\scripts\gapage\gapage\zipping.py

DESCRIPTION
    ## This module facilitates common tasks for archiving with the zipfile module,
    ##      while hiding all that atrocious and repetitive zipfile module verbiage.
    ##
    ##
    ## The public functions are:
    ##
    ## ZipDirectory() - Creates a zipfile and writes to it all directories,
    ##      subdirectories, and files from within the given root directory,
    ##      maintaining paths relative to their original locations.
    ##
    ## Unzip() - Extracts all directories, subdirectories, and files from
    ##      the zipfile and places them in the given root directory, maintaining
    ##      paths relative to their original locations.
    ##
    ## AddToZipfile() - Adds the passed file to the given zipfile.
    ##
    ## UnzipAll() - Unzips all the files in the passed directory
    ##

FUNCTIONS
    AddToZipfile(inputZipfile, inputFile, outputFolder='')
        (string, string, [string]) -> boolean
        
        Adds the input file to the input zipfile.
        
        Returns True if the function ran successfully. Otherwise, returns False.
        
        Arguments:
        inputZipfile -- The absolute path of a zipfile to which you wish to add a
            file. If the zipfile does not yet exist, it will be created.
        inputFile -- The file you wish to add to the zipfile
        outputFolder -- An optional parameter to specify a subdiretory or set of
            subdirectories to which you wish to add the file. If the directories do
            not exist, they will be created.
        
        Examples:
        >>> AddToZipfile('C:\temp\t.zip', 'C:\temp\TestFolder\tables.py', 'flurb\durf')
        True
        >>> AddToZipfile('C:\temp\t.zip', 'C:\temp\TestFolder\tables.py')
        True
    
    Unzip(inZipfile, outDirectory)
        (string, string) -> boolean
        
        Extracts all content of the given .zip file or .gz file and places the
        content in the given output directory.
        
        If the passed file is a .gz file, the script writes the content to a file
        inheriting its name from the input gzip file, sans extension, in the given
        output directory.
        
        Returns True if the function ran successfully. Otherwise, returns False.
        
        Arguments:
        inZipfile -- The absolute path to the zipfile from which you wish to extract
        outDirectory -- The absolute path to the output directory into which you
            wish to place the extracted content.
        
        Example:
        >>> Unzip('C:\temp\t.zip', 'C:\temp\mine\t2')
        True
    
    UnzipAll(directory, outputDirectory)
        (str, str) -> boolean
        
        Unzips all the .zip files and/or .gz files in the passed directory.
        
        Arguments:
        directory -- The path to the directory containing the zip files.
        outputDirectory -- The path to the directory in which you wish to place
            the unzipped contents.
    
    ZipDirectory(rootDir, outFile)
        (string, string) -> boolean
        
        Creates a zipfile at the given output path and zips all files and
        directories (recursively) within the given input root directory.
        
        Returns True if the function ran successfully. Otherwise, returns False.
        
        Will overwrite the output file if it already exists. Also, if the passed
        output filename does not end in '.zip', that extension will be appended.
        
        Arguments:
        rootDir -- The full, absolute path to the directory you wish to zip.
        outFile -- The full, absoluate path of the zipfile you wish to create or
            overwrite.
        
        Example:
        >>> ZipDirectory('C:\temp\t', 'C:\temp\output\t.zip')
        True


